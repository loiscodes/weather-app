import Head from 'next/head'
import Autocomplete from '@mui/material/Autocomplete';
import styles from '@styles/Home.module.css'
import { useDispatch, useSelector } from 'react-redux';
import { setSearch } from '@reducers/root'
import { BaseSyntheticEvent, useCallback, useEffect } from 'react';
import { AppDispatch } from '@appredux/store';
import { fetchSuggestions } from '@api/accuWeather';
import TextField from '@mui/material/TextField';
import { useRouter } from 'next/router'
import { Suggestions, WeatherState } from '@models/weather.models';
import Box from '@mui/material/Box';


export default function Home() {
  const dispatch = useDispatch<AppDispatch>();
  const router = useRouter()
  const locationInputValue = useSelector((state:WeatherState) => state.search)
  const suggestionOptions = useSelector((state:WeatherState) => state.suggestions)
  const status = useSelector((state: WeatherState) => state.status);

  const onInputChangeHandler = (event:BaseSyntheticEvent, value: string) => {
    dispatch(setSearch(value))
  }
  const onChangeHandler = (event:BaseSyntheticEvent, value: string | Suggestions | null) => {
    if(typeof value === "string") return
    router.push(`/forcast/${value?.Key}/today`)
  }
  const getOptionLabel = (option: any) => typeof option === "string" ? option : option.Name

  // Options key is set to options. Name, which is also set at as list label. Since the key needs to be unique we are going to delete the key and use our own
  const removeKeyProps = (props:any) => {
    const copy = {...props}
    delete copy.key
    return copy;
  }
  useEffect(() => {
    if(status === 'failed'){
      throw Error();
    }
    
    if(locationInputValue.length >= 3){
      dispatch(fetchSuggestions(locationInputValue))
    }
  },[locationInputValue])
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to The Weather App
        </h1>

        <p className={styles.description}>
         Enter A City
        </p>

        <div className={styles.grid}>
          <Autocomplete className={styles.autoComplete} freeSolo value={locationInputValue}  getOptionLabel={getOptionLabel} onChange={onChangeHandler} onInputChange={onInputChangeHandler}
          renderOption={(props, option) => (
        <Box component="li" key={option.label} {...removeKeyProps(props)}>
          {option.Name}
        </Box>
      )} options={suggestionOptions} renderInput={(params) => <TextField {...params} label="City" />}/>
        </div>
      </main>
    </div>
  )
}
